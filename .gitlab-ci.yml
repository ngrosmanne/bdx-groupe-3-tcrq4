image: docker:latest
services:
  - name: docker:dind
    alias: docker

stages:          # List of stages for jobs, and their order of execution
  - build
  - test-acceptation
  - test
  - scan
  - push
  - deploy
  - test-deploy
  - monitor

build: # Construction de l'image avec Dockerfile
  stage: build
  script:
    - echo "Construction de l'image avec Dockerfile"
    - docker build -t imagedevopsapp .
    - docker save imagedevopsapp > imagedevopsapp.tar
  artifacts:
    paths:
    - imagedevopsapp.tar   

test acceptation:
  # Official docker image.
  stage: test-acceptation
  script:
    - docker load < imagedevopsapp.tar
    - docker run -d -p 8080:80 --name devopsapp imagedevopsapp ls /usr/share/nginx/html/
    - sleep 5
    #- apk --no-cache add curl
    #- curl "http://docker" | grep  "Hello world!"    

test:   # Test de l'image avec docker-scan
  stage: test
  script:
    - echo "Test unitaire MochaJS"

scan:   # scan de l'image via docker-scan 
  stage: scan
  script:
    - echo "via docker-scan"
    - docker-scan imagedevopsapp

push :   # via docker run et curl
  stage: push
  script:
    - echo "push de limage sur docker hub"

deploy: # Ansible via playbook 
  stage: deploy 
  script:
    - echo "Ansible via playbook"

test-deploy:
  stage: test-deploy 
  script:
    - echo "curl sur http ??"

monitor:
  stage: monitor 
  script:
    - echo "monitoring prometheus -> grafana"